def unique(L):
    """
    Ueses recursion to determine if the input list contains all unique elements.
    NOTE: Could be easily checked by converting list to set then back to list 
            and comparing that to original, but that's no fun.
    
    Inputs:
            L (list): List to check uniqueness of elements.

    Outputs:
            (boolean): True if all elements within list are unique. Else False.
    
    """

    if len(L) <= 1:    # Base case to check single element list
        return True 

    elif L[0] in L[1:]:
        return False

    else:
        return unique(L[1:])

def pseudorandom_lcg(a, c, m, Xi, N):
    """
    Produces a list of pseudorandom generated numbers using the linear 
    congruential generator algorithm.

    Inputs:
            a (integer): The multiplier in the LCG algorithm.

            c (integer): The increment in the LCG algorithm.

            m (integer): The modulus in the LCG algorithm.

            Xi (integer): The starting value in a call to the LCG algorithm.

            N (integer): The number integers generated by the LCG algorithm.

    Output:
            returnlist (integer list): List of numbers generated by algorithm.
    """
    
    returnlist = []

    if N == 0:
        return returnlist
    
    else:
        new_X = (a*Xi + c)%m

        returnlist.append(new_X)
    
    returnlist.extend(pseudorandom_lcg(a, c, m, new_X, N-1))

    return returnlist